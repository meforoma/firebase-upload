{"version":3,"sources":["firebase/index.js","icons/icon-upload.svg","components/StartUI.jsx","icons/icon-success.svg","App.tsx","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","fireStorage","getStorage","StartUI","onFileChange","className","src","iconUpload","alt","id","type","onChange","App","useState","fileError","setFileError","fileLocalUrl","setFileLocalUrl","uploadProgress","setUploadProgress","stage","setStage","iconSuccess","classNames","event","files","target","length","isImage","includes","sizeFits","size","userFile","reader","FileReader","readAsDataURL","onload","result","toString","handlePreview","storageRef","ref","name","uploadBytesResumable","on","snapshot","bytesTransferred","totalBytes","progressCalc","Math","round","error","console","log","uploadFile","max","value","ReactDOM","render","document","getElementById"],"mappings":"8PAYaA,EAAMC,YATI,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAKIC,EAAcC,YAAWT,GCdvB,MAA0B,wC,OCI5BU,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACrB,qCACE,sBACEC,UAAU,6BADZ,UAGE,qBAAKA,UAAU,OAAf,SACE,qBACEC,IAAKC,EACLC,IAAI,cACJH,UAAU,kBAId,iCACE,sBAAKA,UAAU,YAAf,gDAEE,uBACA,sBAAMA,UAAU,cAAhB,oBAHF,0BAQJ,uBACEI,GAAG,YACHC,KAAK,OACLC,SAAUP,QC7BD,MAA0B,yCC8J1BQ,MAlJf,WACE,MAAkCC,oBAAkB,GAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAA6B,IAArE,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4CJ,mBAAiB,GAA7D,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA0BN,mBAA6C,SAAvE,mBAAOO,EAAP,KAAcC,EAAd,KA6GA,OACE,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,YAAf,SAlBY,aAAVe,EAEA,sBAAKf,UAAU,iBAAf,UACE,qBACEC,IAAKgB,EACLd,IAAI,eACJH,UAAU,iBAJd,aAWG,iBAUL,qBACEA,UACEkB,IACE,cACA,CAAE,qBAAsBT,IAJ9B,SAQa,UAAVM,EACG,cAAC,EAAD,CAAShB,aAvFE,SAACoB,GACpB,IAAQC,EAAUD,EAAME,OAAhBD,MAGR,UAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOE,OAAQ,CACjB,IAAMC,EAAUH,EAAM,GAAGf,KAAKmB,SAAS,SACjCC,EAAWL,EAAM,GAAGM,MAJZ,IAMVH,GAAWE,IACbf,GAAa,GACbM,EAAS,aAnBO,SAACW,GACrB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GAErBC,EAAOG,OAAS,WAAO,IAAD,EACpBnB,EAAe,UAACgB,EAAOI,cAAR,aAAC,EAAeC,aAe7BC,CAAcd,EAAM,IA/CP,SAACO,GAClB,GAAKA,EAAL,CAEA,IAAMQ,EAAaC,YAAIxC,EAAD,kBAAyB+B,EAASU,OACnCC,YAAqBH,EAAYR,GAEzCY,GACX,iBAGA,SAACC,GACC,IAAQC,EAAiCD,EAAjCC,iBAAkBC,EAAeF,EAAfE,WACpBC,EAAeC,KAAKC,MACvBJ,EAAmBC,EAAc,KAGpC5B,EAAkB6B,MAIpB,SAACG,GAAD,OAAWC,QAAQC,IAAIF,MAGvB,kBAAM9B,EAAS,gBAyBbiC,CAAW7B,EAAM,KAGdG,GAAYE,GACff,GAAa,OAMjB,sBAAKV,UAAU,mBAAf,UACE,qBACEA,UAAWkB,IACT,mBACA,CAAE,2BAAsC,cAAVH,IAEhCd,IAAKU,EACLR,IAAI,mBAGK,cAAVY,GACC,0BACEf,UAAU,kBACVkD,IAAI,MACJC,MAAOtC,EAHT,SAKGA,SAsDL,qBAAKb,UAAWkB,IACd,cACA,cACA,CAAE,cAAeT,IAHnB,SA/CY,cAAVM,EACK,kDAEK,aAAVA,EACK,8BAEF,kDCrGXqC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.295d9f95.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAEqIsGRSX-FjvwlVzp2zEG4z2JulxPXZo',\n  authDomain: 'fir-upload-a0015.firebaseapp.com',\n  projectId: 'fir-upload-a0015',\n  storageBucket: 'fir-upload-a0015.appspot.com',\n  messagingSenderId: '840464477647',\n  appId: '1:840464477647:web:6a5710120a6b67154036ba'\n};\n\nexport const app = initializeApp(firebaseConfig);\n\nexport const fireStorage = getStorage(app);\n","export default __webpack_public_path__ + \"static/media/icon-upload.a7df5873.svg\";","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/prop-types */\nimport iconUpload from '../icons/icon-upload.svg';\n\nexport const StartUI = ({ onFileChange }) => (\n  <>\n    <div\n      className=\"upload-area__icon-and-text\"\n    >\n      <div className=\"icon\">\n        <img\n          src={iconUpload}\n          alt=\"icon-upload\"\n          className=\"icon-upload\"\n        />\n      </div>\n\n      <header>\n        <div className=\"text--mid\">\n          Drag & Drop image file to upload or\n          <br />\n          <span className=\"text-select\">select</span>\n          &nbsp;it manually\n        </div>\n      </header>\n    </div>\n    <input\n      id=\"fileInput\"\n      type=\"file\"\n      onChange={onFileChange}\n    />\n  </>\n);\n","export default __webpack_public_path__ + \"static/media/icon-success.bf7f9ad2.svg\";","/* eslint-disable no-console */\nimport classNames from 'classnames';\n\nimport { ChangeEvent, useState } from 'react';\nimport './App.scss';\n\nimport { ref, uploadBytesResumable } from 'firebase/storage';\nimport { fireStorage } from './firebase';\n\nimport { StartUI } from './components/StartUI';\nimport iconSuccess from './icons/icon-success.svg';\n\nfunction App() {\n  const [fileError, setFileError] = useState<boolean>(false);\n  const [fileLocalUrl, setFileLocalUrl] = useState<string | undefined>('');\n  const [uploadProgress, setUploadProgress] = useState<number>(0);\n  const [stage, setStage] = useState<'start' | 'uploading' | 'uploaded'>('start');\n\n  const uploadFile = (userFile: File) => {\n    if (!userFile) return;\n\n    const storageRef = ref(fireStorage, `/images/${userFile.name}`);\n    const uploadAction = uploadBytesResumable(storageRef, userFile);\n\n    uploadAction.on(\n      'state_changed',\n\n      // progress logic\n      (snapshot) => {\n        const { bytesTransferred, totalBytes } = snapshot;\n        const progressCalc = Math.round(\n          (bytesTransferred / totalBytes) * 100\n        );\n\n        setUploadProgress(progressCalc);\n      },\n\n      // error logic\n      (error) => console.log(error),\n\n      // success logic\n      () => setStage('uploaded')\n    );\n  };\n\n  const handlePreview = (userFile: File) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(userFile);\n\n    reader.onload = () => {\n      setFileLocalUrl(reader.result?.toString());\n    };\n  };\n\n  const onFileChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const { files } = event.target;\n    const maxSize = 5 * 1e+6;\n\n    if (files?.length) {\n      const isImage = files[0].type.includes('image');\n      const sizeFits = files[0].size <= maxSize;\n\n      if (isImage && sizeFits) {\n        setFileError(false);\n        setStage('uploading');\n        handlePreview(files[0]);\n        uploadFile(files[0]);\n      }\n\n      if (!isImage || !sizeFits) {\n        setFileError(true);\n      }\n    }\n  };\n\n  const uploadUI = () => (\n    <div className=\"upload-container\">\n      <img\n        className={classNames(\n          'upload-area__img',\n          { 'upload-area__img--dimmed': stage === 'uploading' },\n        )}\n        src={fileLocalUrl}\n        alt=\"file-local-url\"\n      />\n\n      {stage === 'uploading' && (\n        <progress\n          className=\"progress-center\"\n          max=\"100\"\n          value={uploadProgress}\n        >\n          {uploadProgress}\n        </progress>\n      )}\n    </div>\n  );\n\n  const bottomText = () => {\n    if (stage === 'uploading') {\n      return \"Don't close this window while the image uploads\";\n    }\n    if (stage === 'uploaded') {\n      return 'Image uploaded successfully';\n    }\n    return 'Upload your image file, up to 5mb in size';\n  };\n\n  const topText = () => {\n    if (stage === 'uploaded') {\n      return (\n        <div className=\"title--success\">\n          <img\n            src={iconSuccess}\n            alt=\"icon-success\"\n            className=\"icon-success\"\n          />\n          Success\n        </div>\n      );\n    }\n\n    return 'Upload Image';\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"text--big\">\n        {topText()}\n      </div>\n\n      {/* Upload area */}\n      <div\n        className={\n          classNames(\n            'upload-area',\n            { 'upload-area--error': fileError }\n          )\n        }\n      >\n        {stage === 'start'\n          ? <StartUI onFileChange={onFileChange} />\n          : uploadUI()}\n      </div>\n\n      {/* Text bottom */}\n      <div className={classNames(\n        'text--light',\n        'text--small',\n        { 'text--error': fileError }\n      )}\n      >\n        {bottomText()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.tsx';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}